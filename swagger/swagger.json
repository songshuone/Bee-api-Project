{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/banner/": {
            "get": {
                "tags": [
                    "banner"
                ],
                "description": "get banner",
                "operationId": "BannerControllers.get",
                "responses": {
                    "200": {
                        "description": "{int} models.Banner"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "get User",
                "operationId": "UserController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {}
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "description": "create User",
                "operationId": "UserController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for User content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.User"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/user/getpost": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "getAllPost the Post",
                "operationId": "UserController.getAllPost",
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "The id you want to modify",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "The id you want to modify",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string}获取数据成功"
                    },
                    "403": {
                        "description": "获取数据失败"
                    }
                }
            }
        },
        "/user/getpostfromid": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "GetPostFromId the Post",
                "operationId": "UserController.GetPostFromId",
                "parameters": [
                    {
                        "in": "query",
                        "name": "postId",
                        "description": "The id you want to modify",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string}获取数据成功"
                    },
                    "403": {
                        "description": "获取数据失败"
                    }
                }
            }
        },
        "/user/getpostfromtagId": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "GetPostFromTag the Post",
                "operationId": "UserController.GetPostFromTag",
                "parameters": [
                    {
                        "in": "query",
                        "name": "tagId",
                        "description": "The id you want to modify",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string}获取数据成功"
                    },
                    "403": {
                        "description": "获取数据失败"
                    }
                }
            }
        },
        "/user/gettag": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "GetAllTag the Post",
                "operationId": "UserController.GetAllTag",
                "responses": {
                    "200": {
                        "description": "{string}获取数据成功"
                    },
                    "403": {
                        "description": "获取数据失败"
                    }
                }
            }
        },
        "/user/login": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "login the User",
                "operationId": "UserController.Login",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name you want to login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The password you want to login",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} login success!"
                    },
                    "403": {
                        "description": "user no exist"
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "ModifyPwd the User",
                "operationId": "UserController.ModifyPwd",
                "parameters": [
                    {
                        "in": "query",
                        "name": "session",
                        "description": "The id you want to modify",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string}注销成功"
                    },
                    "403": {
                        "description": "你还没有登录"
                    }
                }
            }
        },
        "/user/modifypwd": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "ModifyPwd the User",
                "operationId": "UserController.ModifyPwd",
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "description": "The id you want to modify",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "session",
                        "description": "The id you want to modify",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The password you want to reset pwd",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} 修改 success!"
                    },
                    "403": {
                        "description": "修改 fail"
                    }
                }
            }
        },
        "/user/regiser": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "login the User",
                "operationId": "UserController.RegisterUser",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "The name you want to login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The password you want to login",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} RegisterUser success!"
                    },
                    "403": {
                        "description": "register fail"
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "get User by id",
                "operationId": "UserController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "description": "update the User",
                "operationId": "UserController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for User content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "description": "delete the User",
                "operationId": "UserController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Post": {
            "title": "Post",
            "type": "object",
            "properties": {
                "User": {
                    "$ref": "#/definitions/models.User"
                },
                "content": {
                    "type": "string"
                },
                "create_date": {
                    "type": "string",
                    "format": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "img_desc": {
                    "type": "string"
                },
                "praise_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Tag": {
            "title": "Tag",
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "title": "User",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer",
                    "format": "int64"
                },
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "post": {
                    "$ref": "#/definitions/models.Post"
                }
            }
        }
    },
    "tags": [
        {
            "name": "user",
            "description": "UserController operations for User\n"
        }
    ]
}